from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    filters
)

TOKEN = "7576829058:AAErIT2nPfkQaCL5U38oGoCSKjJCkcJNnus"
ADMIN_ID = 373599772  # —Ç–≤–æ–π Telegram ID

user_state = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [InlineKeyboardButton("üé∏ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data="band")],
        [InlineKeyboardButton("üì¢ –ñ–∞–ª–æ–±–∞", callback_data="complaint")],
        [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏", url="https://t.me/metalgrindcollection/10294")]
    ]
    if update.message:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(buttons)
        )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    if query.data == "band":
        user_state[user_id] = "waiting_for_band"
        await query.edit_message_text("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:")
    elif query.data == "complaint":
        user_state[user_id] = "waiting_for_complaint"
        await query.edit_message_text("–û–ø–∏—à–∏—Ç–µ, –Ω–∞ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è:")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    text = update.message.text
    state = user_state.get(user_id)

    username = f"@{user.username}" if user.username else "–±–µ–∑ username"
    name = f"{user.first_name} {user.last_name or ''}".strip()

    if state == "waiting_for_band":
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –≥—Ä—É–ø–ø—É.")
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"üé∏ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã:
"
                 f"üë§ –û—Ç: {name} ({username})
"
                 f"üÜî ID: {user_id}

"
                 f"{text}"
        )
        user_state[user_id] = None

    elif state == "waiting_for_complaint":
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –∂–∞–ª–æ–±—É. –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—ë.")
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"üì¢ –ñ–∞–ª–æ–±–∞:
"
                 f"üë§ –û—Ç: {name} ({username})
"
                 f"üÜî ID: {user_id}

"
                 f"{text}"
        )
        user_state[user_id] = None

    else:
        await update.message.reply_text("–ù–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü§ò –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ù–∞–ø–∏—à–∏ /start –≤ Telegram.")
    app.run_polling()

if __name__ == "__main__":
    main()
